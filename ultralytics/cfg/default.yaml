# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# Default training settings and hyperparameters for medium-augmentation COCO training

task: detect # (str) YOLO task, i.e. detect, segment, classify, pose, obb
mode: track # (str) YOLO mode, i.e. train, val, predict, export, track, benchmark

# Train settings -------------------------------------------------------------------------------------------------------
project: Bottle-detection #Project name
name: # (str, optional) name of experiment
model: yolov8n.pt
exist_ok: False # (bool) whether to overwrite existing experiment (same names)
device: 0 # (str, optional) device to run on, i.e. cuda device=0/1/2/3 or device=cpu
imgsz: 640 # (int) image size (default=640)
seed: 0 # (int) random seed for reproducibility
data: # (str, optional) path to data file, i.e. coco8.yaml
batch: 16 # (int) number of images per batch (-1 for AutoBatch)
verbose: False # (bool) whether to print verbose output

conf: 0.25 # (float, optional) object confidence threshold for detection (default 0.25 predict, 0.001 val)
iou: 0.2 # (float) intersection over union (IoU) threshold for NMS
max_det: 100 # (int) maximum number of detections per image
half: False # (bool) use half precision (FP16)
dnn: False # (bool) use OpenCV DNN for ONNX inference

save: True # (bool) save train checkpoints and predict results

# Predict settings -----------------------------------------------------------------------------------------------------
source: # (str, optional) source directory for images or videos
vid_stride: 1 # (int) video frame-rate stride
stream_buffer: False # (bool) buffer all streaming frames (True) or return the most recent frame (False)
visualize: False # (bool) visualize model features
augment: False # (bool) apply image augmentation to prediction sources
agnostic_nms: False # (bool) class-agnostic NMS
classes: # (int | list[int], optional) filter results by class, i.e. classes=0, or classes=[0,2,3]
embed: # (list[int], optional) return feature vectors/embeddings from given layers

# Visualize settings ---------------------------------------------------------------------------------------------------
show: False # (bool) show predicted images and videos if environment allows
save_frames: False # (bool) save predicted individual video frames
save_txt: False # (bool) save results as .txt file
save_conf: False # (bool) save results with confidence scores
save_crop: False # (bool) save cropped images with results
show_labels: True # (bool) show prediction labels, i.e. 'person'
show_conf: True # (bool) show prediction confidence, i.e. '0.99'
show_boxes: True # (bool) show prediction boxes
line_width_percentage: 0.0015 # (int, optional) line width of the bounding boxes. Scaled to image size if None.

# Custom config.yaml ---------------------------------------------------------------------------------------------------
cfg: # (str, optional) for overriding defaults.yaml

# Tracker settings ------------------------------------------------------------------------------------------------------
tracker: botsort.yaml # (str) tracker type, choices=[botsort.yaml, bytetrack.yaml]
